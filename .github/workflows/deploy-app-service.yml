name: Trigger app service deployment

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: 
      [ main ]
    paths:
    - '**'

  # Allow mannually trigger 
  workflow_dispatch:      

env:
  location: 'southcentralus'
  app-service-postfix: 'redis-api'
  resource-group-name: 'red-scus-appsrvdemo-rg'
  main-app-service-deployment-name: 'main-deploy-app-service'

jobs:
  build-infra:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Resource Group, Deploy Bicep
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az group create -l ${{ env.location }} -n ${{ env.resource-group-name}}
            az deployment group create --resource-group ${{ env.resource-group-name }} \
             --template-file ./iac/main-deploy-app-service.bicep \
             --parameters app_service_postfix=${{ env.app-service-postfix }} app_service_sku=B1

      - name: Get App Service Name
        uses: azure/CLI@v1
        with:
          inlineScript: |
            APP_NAME=$(az deployment group show -g ${{ env.resource-group-name }} -n ${{ env.main-app-service-deployment-name }} --query properties.outputs.appServiceName.value  --output tsv)
            echo APP_NAME=$APP_NAME >> $GITHUB_ENV
      
      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear

  build:
    runs-on: ubuntu-latest
    needs: build-infra

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_NAME }}
          package: .

      - name: Set App Service Config Items
        uses: Azure/appservice-settings@v1
        with:
          app-name: ${{ env.APP_NAME }}
          app-settings-json: |
            [
              {
                "name": "CacheConnection",
                "value": "boo",
                "slotSetting": false
              }
            ]